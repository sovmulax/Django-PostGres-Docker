services:
  app:
    container_name: appname-server
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    entrypoint: ["/home/app/docker/backend/server-entrypoint.sh"]
    volumes:
      - static_volume:/home/app/backend/static
      - media_volume:/home/app/backend/media
    expose:
      - 8000
    env_file:
      - ./app/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/appname/admin/"] # To custom
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - subNetwork
    logging:
      options:
        max-size: 10m

  nginx:
    container_name: appname-nginx
    build: ./docker/nginx
    restart: always
    volumes:
      - static_volume:/home/app/backend/static
      - media_volume:/home/app/backend/media
    ports:
      - 4000:80 #externe port of the serveur
    depends_on:
      - app
    networks:
      - subNetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/appname/admin"] # To custom
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      options:
        max-size: 10m

  redis:
    container_name: appname-redis
    restart: always
    image: redis:7.0.5-alpine
    expose:
      - 6379
    networks:
      - subNetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    logging:
      options:
        max-size: 10m

  deamons:
    container_name: appname-celery-beat-deamons
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    entrypoint: ["/home/app/docker/backend/daemon-entrypoint.sh"]
    env_file:
      - ./app/.env
    depends_on:
      - app
      - redis
    volumes:
      - ./docker/supervisor/celery.conf:/etc/supervisor/conf.d/celery.conf
      - static_volume:/home/app/backend/static
      - media_volume:/home/app/backend/media
    networks:
      - subNetwork
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      options:
        max-size: 10m

  autoheal:
    container_name: appname-autoheal
    image: willfarrell/autoheal:latest
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=30
      - AUTOHEAL_START_PERIOD=120
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - subNetwork
    logging:
      options:
        max-size: 10m

networks:
  subNetwork:
    name: appname_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 0.0.0.0/1

volumes:
  static_volume: {}
  media_volume: {}
